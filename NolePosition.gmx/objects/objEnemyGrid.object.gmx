<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Setup grid for enemies

// Hardcoded version
gridX[0,0] = 320;
gridX[0,1] = 448;
gridX[0,2] = 576;

gridX[1,0] = 256;
gridX[1,1] = 384;
gridX[1,2] = 512;
gridX[1,3] = 640;

gridX[2,0] = 192;
gridX[2,1] = 320;
gridX[2,2] = 448;
gridX[2,3] = 576;
gridX[2,4] = 704;

gridX[3,0] = 192;
gridX[3,1] = 320;
gridX[3,2] = 448;
gridX[3,3] = 576;
gridX[3,4] = 704;

gridY[0] = 224;
gridY[1] = 304;
gridY[2] = 416;
gridY[3] = 544;
//playerGrid = 128 X 128, same X as gridX[2] and Y = 544

//Use dynamic generation


var rw = view_wview[1];
var minSpacing = 128;
var cols = 5;
var maxSpacing = rw / cols;
var sw = sprite_get_width(sprPlayer);
var space = sw/2;


gridX[2,0] = space;
gridX[2,1] = space + maxSpacing;
gridX[2,2] = space + maxSpacing * 2;
gridX[2,3] = space + maxSpacing * 3;
gridX[2,4] = space + maxSpacing * 4;

gridX[3,0] = space;
gridX[3,1] = space + maxSpacing;
gridX[3,2] = space + maxSpacing * 2;
gridX[3,3] = space + maxSpacing * 3;
gridX[3,4] = space + maxSpacing * 4;

gridX[1,0] = space + maxSpacing / 2;
gridX[1,1] = space + maxSpacing * 3/ 2;
gridX[1,2] = space + maxSpacing * 5/ 2;
gridX[1,3] = space + maxSpacing * 7/ 2;

var d = gridX[1,1] - gridX[1,0];

gridX[0,0] = gridX[1,0] + d/2;
gridX[0,1] = gridX[1,1] + d/2;
gridX[0,2] = gridX[1,2] + d/2;




gridY[0] = 224;
gridY[1] = 304;
gridY[2] = 416;
gridY[3] = 544;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>0</libid>
        <id>0</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
